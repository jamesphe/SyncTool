//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated using CodeSmith: v7.0.1, CSLA Templates: v4.0.0.0, CSLA Framework: v4.3.x.
//     Changes to this file will be lost after each regeneration.
//     To extend the functionality of this class, please modify the partial class 'BaseVouchInfo.cs'.
//
//     Template: ReadOnlyRoot.Generated.cst
//     Template website: http://code.google.com/p/codesmith/
// </autogenerated>
//------------------------------------------------------------------------------
using System;

using Csla;
using Csla.Data;

namespace vjf.SyncTool.Business
{
    [Serializable]
    public partial class BaseVouchInfo : ReadOnlyBase<BaseVouchInfo>
    {
        #region Contructor(s)

        public BaseVouchInfo()
        { /* Require use of factory methods */ }

        #endregion

        #region Properties

        public static readonly PropertyInfo<System.Int32> _identificationProperty = RegisterProperty<System.Int32>(p => p.Identification, "Identification");

        [System.ComponentModel.DataObjectField(true, true)]
        public System.Int32 Identification
        {
            get { return GetProperty(_identificationProperty); }
        }

        public static readonly PropertyInfo<System.String> _gidProperty = RegisterProperty<System.String>(p => p.Gid, "Gid");

        public System.String Gid
        {
            get { return GetProperty(_gidProperty); }
        }

        public static readonly PropertyInfo<System.String> _vnameProperty = RegisterProperty<System.String>(p => p.Vname, "Vname", (System.String)null);

        public System.String Vname
        {
            get { return GetProperty(_vnameProperty); }
        }

        public static readonly PropertyInfo<System.Int16?> _statusProperty = RegisterProperty<System.Int16?>(p => p.Status, "Status", (System.Int16?)null);

        public System.Int16? Status
        {
            get { return GetProperty(_statusProperty); }
        }

        public static readonly PropertyInfo<System.Int32?> _begintimeProperty = RegisterProperty<System.Int32?>(p => p.Begintime, "Begintime", (System.Int32?)null);

        public System.Int32? Begintime
        {
            get { return GetProperty(_begintimeProperty); }
        }

        public static readonly PropertyInfo<System.Int32?> _createdProperty = RegisterProperty<System.Int32?>(p => p.Created, "Created", (System.Int32?)null);

        public System.Int32? Created
        {
            get { return GetProperty(_createdProperty); }
        }

        public static readonly PropertyInfo<System.String> _createidProperty = RegisterProperty<System.String>(p => p.Createid, "Createid", (System.String)null);

        public System.String Createid
        {
            get { return GetProperty(_createidProperty); }
        }

        public static readonly PropertyInfo<System.String> _cityProperty = RegisterProperty<System.String>(p => p.City, "City", (System.String)null);

        public System.String City
        {
            get { return GetProperty(_cityProperty); }
        }

        public static readonly PropertyInfo<System.String> _productProperty = RegisterProperty<System.String>(p => p.Product, "Product", (System.String)null);

        public System.String Product
        {
            get { return GetProperty(_productProperty); }
        }

        public static readonly PropertyInfo<System.String> _storeProperty = RegisterProperty<System.String>(p => p.Store, "Store", (System.String)null);

        public System.String Store
        {
            get { return GetProperty(_storeProperty); }
        }

        public static readonly PropertyInfo<System.String> _paytypeProperty = RegisterProperty<System.String>(p => p.Paytype, "Paytype", (System.String)null);

        public System.String Paytype
        {
            get { return GetProperty(_paytypeProperty); }
        }

        public static readonly PropertyInfo<System.String> _usecanalProperty = RegisterProperty<System.String>(p => p.Usecanal, "Usecanal", (System.String)null);

        public System.String Usecanal
        {
            get { return GetProperty(_usecanalProperty); }
        }

        public static readonly PropertyInfo<System.String> _getcanalProperty = RegisterProperty<System.String>(p => p.Getcanal, "Getcanal", (System.String)null);

        public System.String Getcanal
        {
            get { return GetProperty(_getcanalProperty); }
        }

        public static readonly PropertyInfo<System.Int32?> _nodeProperty = RegisterProperty<System.Int32?>(p => p.Node, "Node", (System.Int32?)null);

        public System.Int32? Node
        {
            get { return GetProperty(_nodeProperty); }
        }

        public static readonly PropertyInfo<System.String> _nodeproductProperty = RegisterProperty<System.String>(p => p.Nodeproduct, "Nodeproduct", (System.String)null);

        public System.String Nodeproduct
        {
            get { return GetProperty(_nodeproductProperty); }
        }

        public static readonly PropertyInfo<System.Single?> _costProperty = RegisterProperty<System.Single?>(p => p.Cost, "Cost", (System.Single?)null);

        public System.Single? Cost
        {
            get { return GetProperty(_costProperty); }
        }

        public static readonly PropertyInfo<System.Single?> _paycostProperty = RegisterProperty<System.Single?>(p => p.Paycost, "Paycost", (System.Single?)null);

        public System.Single? Paycost
        {
            get { return GetProperty(_paycostProperty); }
        }

        public static readonly PropertyInfo<System.Int16?> _typeProperty = RegisterProperty<System.Int16?>(p => p.Type, "Type", (System.Int16?)null);

        public System.Int16? Type
        {
            get { return GetProperty(_typeProperty); }
        }

        public static readonly PropertyInfo<System.String> _expdayProperty = RegisterProperty<System.String>(p => p.Expday, "Expday", (System.String)null);

        public System.String Expday
        {
            get { return GetProperty(_expdayProperty); }
        }

        public static readonly PropertyInfo<System.Int16?> _ischangeProperty = RegisterProperty<System.Int16?>(p => p.Ischange, "Ischange", (System.Int16?)null);

        public System.Int16? Ischange
        {
            get { return GetProperty(_ischangeProperty); }
        }

        public static readonly PropertyInfo<System.String> _quotietyProperty = RegisterProperty<System.String>(p => p.Quotiety, "Quotiety", (System.String)null);

        public System.String Quotiety
        {
            get { return GetProperty(_quotietyProperty); }
        }

        public static readonly PropertyInfo<System.String> _brandidProperty = RegisterProperty<System.String>(p => p.Brandid, "Brandid");

        public System.String Brandid
        {
            get { return GetProperty(_brandidProperty); }
        }


        #endregion

        #region Synchronous Factory Methods 

        internal static BaseVouchInfo GetBaseVouchInfo(SafeDataReader reader)
        {
            return DataPortal.FetchChild<BaseVouchInfo>(reader);
        }

        /// <summary>
        /// Returns a <see cref="BaseVouchInfo"/> object of the specified criteria. 
        /// </summary>
        /// <param name="identification">No additional detail available.</param>
        /// <returns>A <see cref="BaseVouchInfo"/> object of the specified criteria.</returns>
        public static BaseVouchInfo GetByIdentification(System.Int32 identification)
        {
            var criteria = new BaseVouchCriteria {Identification = identification};
            
            
            return DataPortal.Fetch<BaseVouchInfo>(criteria);
        }

        #endregion

        #region Asynchronous Factory Methods

        public static void GetByIdentificationAsync(System.Int32 identification, EventHandler<DataPortalResult<BaseVouchInfo>> handler)
        {
            var criteria = new BaseVouchCriteria{Identification = identification};
            
            
            var dp = new DataPortal<BaseVouchInfo>();
            dp.FetchCompleted += handler;
            dp.BeginFetch(criteria);
        }

        #endregion

        #region DataPortal partial methods

        /// <summary>
        /// CodeSmith generated stub method that is called when creating the <see cref="BaseVouchInfo"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object creation should proceed.</param>
        partial void OnCreating(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseVouchInfo"/> object has been created. 
        /// </summary>
        partial void OnCreated();

        /// <summary>
        /// CodeSmith generated stub method that is called when fetching the <see cref="BaseVouchInfo"/> object. 
        /// </summary>
        /// <param name="criteria"><see cref="BaseVouchInfoCriteria"/> object containing the criteria of the object to fetch.</param>
        /// <param name="cancel">Value returned from the method indicating whether the object fetching should proceed.</param>
        partial void OnFetching(BaseVouchCriteria criteria, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseVouchInfo"/> object has been fetched. 
        /// </summary>    
        partial void OnFetched();

        /// <summary>
        /// CodeSmith generated stub method that is called when mapping the <see cref="BaseVouchInfo"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object mapping should proceed.</param>
        partial void OnMapping(ref bool cancel);
 
        /// <summary>
        /// CodeSmith generated stub method that is called when mapping the <see cref="BaseVouchInfo"/> object. 
        /// </summary>
        /// <param name="reader["></param>
        /// <param name="cancel">Value returned from the method indicating whether the object mapping should proceed.</param>
        partial void OnMapping(SafeDataReader reader, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseVouchInfo"/> object has been mapped. 
        /// </summary>
        partial void OnMapped();

        /// <summary>
        /// CodeSmith generated stub method that is called when inserting the <see cref="BaseVouchInfo"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object insertion should proceed.</param>
        partial void OnInserting(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseVouchInfo"/> object has been inserted. 
        /// </summary>
        partial void OnInserted();

        /// <summary>
        /// CodeSmith generated stub method that is called when updating the <see cref="BaseVouchInfo"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object creation should proceed.</param>
        partial void OnUpdating(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseVouchInfo"/> object has been updated. 
        /// </summary>
        partial void OnUpdated();

        /// <summary>
        /// CodeSmith generated stub method that is called when self deleting the <see cref="BaseVouchInfo"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object self deletion should proceed.</param>
        partial void OnSelfDeleting(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseVouchInfo"/> object has been deleted. 
        /// </summary>
        partial void OnSelfDeleted();

        /// <summary>
        /// CodeSmith generated stub method that is called when deleting the <see cref="BaseVouchInfo"/> object. 
        /// </summary>
        /// <param name="criteria"><see cref="BaseVouchInfoCriteria"/> object containing the criteria of the object to delete.</param>
        /// <param name="cancel">Value returned from the method indicating whether the object deletion should proceed.</param>
        partial void OnDeleting(BaseVouchCriteria criteria, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseVouchInfo"/> object with the specified criteria has been deleted. 
        /// </summary>
        partial void OnDeleted();
        partial void OnChildLoading(Csla.Core.IPropertyInfo childProperty, ref bool cancel);

        #endregion

        #region Exists Command

        /// <summary>
        /// Determines if a record exists in the base_vouch table in the database for the specified criteria. 
        /// </summary>
        /// <param name="criteria">The criteria parameter is an <see cref="BaseVouchInfo"/> object.</param>
        /// <returns>A boolean value of true is returned if a record is found.</returns>
        public static bool Exists(BaseVouchCriteria criteria)
        {
            return vjf.SyncTool.Business.ExistsCommand.Execute(criteria);
        }

        /// <summary>
        /// Determines if a record exists in the base_vouch table in the database for the specified criteria. 
        /// </summary>
        public static void ExistsAsync(BaseVouchCriteria criteria, EventHandler<DataPortalResult<ExistsCommand>> handler)
        {
            vjf.SyncTool.Business.ExistsCommand.ExecuteAsync(criteria, handler);
        }

        #endregion

    }
}