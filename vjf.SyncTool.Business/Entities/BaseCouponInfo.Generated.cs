//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated using CodeSmith: v7.0.1, CSLA Templates: v4.0.0.0, CSLA Framework: v4.3.x.
//     Changes to this file will be lost after each regeneration.
//     To extend the functionality of this class, please modify the partial class 'BaseCouponInfo.cs'.
//
//     Template: ReadOnlyRoot.Generated.cst
//     Template website: http://code.google.com/p/codesmith/
// </autogenerated>
//------------------------------------------------------------------------------
using System;

using Csla;
using Csla.Data;

namespace vjf.SyncTool.Business
{
    [Serializable]
    public partial class BaseCouponInfo : ReadOnlyBase<BaseCouponInfo>
    {
        #region Contructor(s)

        public BaseCouponInfo()
        { /* Require use of factory methods */ }

        #endregion

        #region Properties

        public static readonly PropertyInfo<System.Int32> _identificationProperty = RegisterProperty<System.Int32>(p => p.Identification, "Identification");

        [System.ComponentModel.DataObjectField(true, true)]
        public System.Int32 Identification
        {
            get { return GetProperty(_identificationProperty); }
        }

        public static readonly PropertyInfo<System.String> _batchnoProperty = RegisterProperty<System.String>(p => p.Batchno, "Batchno", (System.String)null);

        public System.String Batchno
        {
            get { return GetProperty(_batchnoProperty); }
        }

        public static readonly PropertyInfo<System.String> _qdidProperty = RegisterProperty<System.String>(p => p.Qdid, "Qdid", (System.String)null);

        public System.String Qdid
        {
            get { return GetProperty(_qdidProperty); }
        }

        public static readonly PropertyInfo<System.String> _hzmidProperty = RegisterProperty<System.String>(p => p.Hzmid, "Hzmid", (System.String)null);

        public System.String Hzmid
        {
            get { return GetProperty(_hzmidProperty); }
        }

        public static readonly PropertyInfo<System.Int32?> _cardnumProperty = RegisterProperty<System.Int32?>(p => p.Cardnum, "Cardnum", (System.Int32?)null);

        public System.Int32? Cardnum
        {
            get { return GetProperty(_cardnumProperty); }
        }

        public static readonly PropertyInfo<System.Int32?> _cardlengthProperty = RegisterProperty<System.Int32?>(p => p.Cardlength, "Cardlength", (System.Int32?)null);

        public System.Int32? Cardlength
        {
            get { return GetProperty(_cardlengthProperty); }
        }

        public static readonly PropertyInfo<System.Int16?> _pidProperty = RegisterProperty<System.Int16?>(p => p.Pid, "Pid", (System.Int16?)null);

        public System.Int16? Pid
        {
            get { return GetProperty(_pidProperty); }
        }

        public static readonly PropertyInfo<System.Int32?> _vidProperty = RegisterProperty<System.Int32?>(p => p.Vid, "Vid", (System.Int32?)null);

        public System.Int32? Vid
        {
            get { return GetProperty(_vidProperty); }
        }

        public static readonly PropertyInfo<System.Int32?> _pnumProperty = RegisterProperty<System.Int32?>(p => p.Pnum, "Pnum", (System.Int32?)null);

        public System.Int32? Pnum
        {
            get { return GetProperty(_pnumProperty); }
        }

        public static readonly PropertyInfo<System.Int32?> _begintimeProperty = RegisterProperty<System.Int32?>(p => p.Begintime, "Begintime", (System.Int32?)null);

        public System.Int32? Begintime
        {
            get { return GetProperty(_begintimeProperty); }
        }

        public static readonly PropertyInfo<System.Int32?> _endtimeProperty = RegisterProperty<System.Int32?>(p => p.Endtime, "Endtime", (System.Int32?)null);

        public System.Int32? Endtime
        {
            get { return GetProperty(_endtimeProperty); }
        }

        public static readonly PropertyInfo<System.Single?> _pointProperty = RegisterProperty<System.Single?>(p => p.Point, "Point", (System.Single?)null);

        public System.Single? Point
        {
            get { return GetProperty(_pointProperty); }
        }

        public static readonly PropertyInfo<System.Single?> _feepointProperty = RegisterProperty<System.Single?>(p => p.Feepoint, "Feepoint", (System.Single?)null);

        public System.Single? Feepoint
        {
            get { return GetProperty(_feepointProperty); }
        }

        public static readonly PropertyInfo<System.Int32?> _statusProperty = RegisterProperty<System.Int32?>(p => p.Status, "Status", (System.Int32?)null);

        public System.Int32? Status
        {
            get { return GetProperty(_statusProperty); }
        }

        public static readonly PropertyInfo<System.Int32?> _createdProperty = RegisterProperty<System.Int32?>(p => p.Created, "Created", (System.Int32?)null);

        public System.Int32? Created
        {
            get { return GetProperty(_createdProperty); }
        }

        public static readonly PropertyInfo<System.String> _createidProperty = RegisterProperty<System.String>(p => p.Createid, "Createid", (System.String)null);

        public System.String Createid
        {
            get { return GetProperty(_createidProperty); }
        }

        public static readonly PropertyInfo<System.Int16?> _cardruleProperty = RegisterProperty<System.Int16?>(p => p.Cardrule, "Cardrule", (System.Int16?)null);

        public System.Int16? Cardrule
        {
            get { return GetProperty(_cardruleProperty); }
        }

        public static readonly PropertyInfo<System.String> _remarkProperty = RegisterProperty<System.String>(p => p.Remark, "Remark", (System.String)null);

        public System.String Remark
        {
            get { return GetProperty(_remarkProperty); }
        }

        public static readonly PropertyInfo<System.String> _provinceProperty = RegisterProperty<System.String>(p => p.Province, "Province");

        public System.String Province
        {
            get { return GetProperty(_provinceProperty); }
        }

        public static readonly PropertyInfo<System.String> _cityProperty = RegisterProperty<System.String>(p => p.City, "City");

        public System.String City
        {
            get { return GetProperty(_cityProperty); }
        }

        public static readonly PropertyInfo<System.String> _areaProperty = RegisterProperty<System.String>(p => p.Area, "Area");

        public System.String Area
        {
            get { return GetProperty(_areaProperty); }
        }

        public static readonly PropertyInfo<System.Int32> _expdateProperty = RegisterProperty<System.Int32>(p => p.Expdate, "Expdate");

        public System.Int32 Expdate
        {
            get { return GetProperty(_expdateProperty); }
        }

        public static readonly PropertyInfo<System.Int32> _expdayProperty = RegisterProperty<System.Int32>(p => p.Expday, "Expday");

        public System.Int32 Expday
        {
            get { return GetProperty(_expdayProperty); }
        }


        #endregion

        #region Synchronous Factory Methods 

        internal static BaseCouponInfo GetBaseCouponInfo(SafeDataReader reader)
        {
            return DataPortal.FetchChild<BaseCouponInfo>(reader);
        }

        /// <summary>
        /// Returns a <see cref="BaseCouponInfo"/> object of the specified criteria. 
        /// </summary>
        /// <param name="identification">No additional detail available.</param>
        /// <returns>A <see cref="BaseCouponInfo"/> object of the specified criteria.</returns>
        public static BaseCouponInfo GetByIdentification(System.Int32 identification)
        {
            var criteria = new BaseCouponCriteria {Identification = identification};
            
            
            return DataPortal.Fetch<BaseCouponInfo>(criteria);
        }

        #endregion

        #region Asynchronous Factory Methods

        public static void GetByIdentificationAsync(System.Int32 identification, EventHandler<DataPortalResult<BaseCouponInfo>> handler)
        {
            var criteria = new BaseCouponCriteria{Identification = identification};
            
            
            var dp = new DataPortal<BaseCouponInfo>();
            dp.FetchCompleted += handler;
            dp.BeginFetch(criteria);
        }

        #endregion

        #region DataPortal partial methods

        /// <summary>
        /// CodeSmith generated stub method that is called when creating the <see cref="BaseCouponInfo"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object creation should proceed.</param>
        partial void OnCreating(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseCouponInfo"/> object has been created. 
        /// </summary>
        partial void OnCreated();

        /// <summary>
        /// CodeSmith generated stub method that is called when fetching the <see cref="BaseCouponInfo"/> object. 
        /// </summary>
        /// <param name="criteria"><see cref="BaseCouponInfoCriteria"/> object containing the criteria of the object to fetch.</param>
        /// <param name="cancel">Value returned from the method indicating whether the object fetching should proceed.</param>
        partial void OnFetching(BaseCouponCriteria criteria, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseCouponInfo"/> object has been fetched. 
        /// </summary>    
        partial void OnFetched();

        /// <summary>
        /// CodeSmith generated stub method that is called when mapping the <see cref="BaseCouponInfo"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object mapping should proceed.</param>
        partial void OnMapping(ref bool cancel);
 
        /// <summary>
        /// CodeSmith generated stub method that is called when mapping the <see cref="BaseCouponInfo"/> object. 
        /// </summary>
        /// <param name="reader["></param>
        /// <param name="cancel">Value returned from the method indicating whether the object mapping should proceed.</param>
        partial void OnMapping(SafeDataReader reader, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseCouponInfo"/> object has been mapped. 
        /// </summary>
        partial void OnMapped();

        /// <summary>
        /// CodeSmith generated stub method that is called when inserting the <see cref="BaseCouponInfo"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object insertion should proceed.</param>
        partial void OnInserting(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseCouponInfo"/> object has been inserted. 
        /// </summary>
        partial void OnInserted();

        /// <summary>
        /// CodeSmith generated stub method that is called when updating the <see cref="BaseCouponInfo"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object creation should proceed.</param>
        partial void OnUpdating(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseCouponInfo"/> object has been updated. 
        /// </summary>
        partial void OnUpdated();

        /// <summary>
        /// CodeSmith generated stub method that is called when self deleting the <see cref="BaseCouponInfo"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object self deletion should proceed.</param>
        partial void OnSelfDeleting(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseCouponInfo"/> object has been deleted. 
        /// </summary>
        partial void OnSelfDeleted();

        /// <summary>
        /// CodeSmith generated stub method that is called when deleting the <see cref="BaseCouponInfo"/> object. 
        /// </summary>
        /// <param name="criteria"><see cref="BaseCouponInfoCriteria"/> object containing the criteria of the object to delete.</param>
        /// <param name="cancel">Value returned from the method indicating whether the object deletion should proceed.</param>
        partial void OnDeleting(BaseCouponCriteria criteria, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseCouponInfo"/> object with the specified criteria has been deleted. 
        /// </summary>
        partial void OnDeleted();
        partial void OnChildLoading(Csla.Core.IPropertyInfo childProperty, ref bool cancel);

        #endregion

        #region Exists Command

        /// <summary>
        /// Determines if a record exists in the base_coupon table in the database for the specified criteria. 
        /// </summary>
        /// <param name="criteria">The criteria parameter is an <see cref="BaseCouponInfo"/> object.</param>
        /// <returns>A boolean value of true is returned if a record is found.</returns>
        public static bool Exists(BaseCouponCriteria criteria)
        {
            return vjf.SyncTool.Business.ExistsCommand.Execute(criteria);
        }

        /// <summary>
        /// Determines if a record exists in the base_coupon table in the database for the specified criteria. 
        /// </summary>
        public static void ExistsAsync(BaseCouponCriteria criteria, EventHandler<DataPortalResult<ExistsCommand>> handler)
        {
            vjf.SyncTool.Business.ExistsCommand.ExecuteAsync(criteria, handler);
        }

        #endregion

    }
}