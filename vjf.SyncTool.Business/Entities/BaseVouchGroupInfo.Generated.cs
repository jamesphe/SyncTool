//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated using CodeSmith: v7.0.1, CSLA Templates: v4.0.0.0, CSLA Framework: v4.3.x.
//     Changes to this file will be lost after each regeneration.
//     To extend the functionality of this class, please modify the partial class 'BaseVouchGroupInfo.cs'.
//
//     Template: ReadOnlyRoot.Generated.cst
//     Template website: http://code.google.com/p/codesmith/
// </autogenerated>
//------------------------------------------------------------------------------
using System;

using Csla;
using Csla.Data;

namespace vjf.SyncTool.Business
{
    [Serializable]
    public partial class BaseVouchGroupInfo : ReadOnlyBase<BaseVouchGroupInfo>
    {
        #region Contructor(s)

        public BaseVouchGroupInfo()
        { /* Require use of factory methods */ }

        #endregion

        #region Properties

        public static readonly PropertyInfo<System.String> _identificationProperty = RegisterProperty<System.String>(p => p.Identification, "Identification");

        [System.ComponentModel.DataObjectField(true, false)]
        public System.String Identification
        {
            get { return GetProperty(_identificationProperty); }
        }

        public static readonly PropertyInfo<System.String> _titleProperty = RegisterProperty<System.String>(p => p.Title, "Title");

        public System.String Title
        {
            get { return GetProperty(_titleProperty); }
        }

        public static readonly PropertyInfo<System.String> _cityProperty = RegisterProperty<System.String>(p => p.City, "City", (System.String)null);

        public System.String City
        {
            get { return GetProperty(_cityProperty); }
        }

        public static readonly PropertyInfo<System.Int32?> _beginDateProperty = RegisterProperty<System.Int32?>(p => p.BeginDate, "Begin Date", (System.Int32?)null);

        public System.Int32? BeginDate
        {
            get { return GetProperty(_beginDateProperty); }
        }

        public static readonly PropertyInfo<System.Int32?> _endDateProperty = RegisterProperty<System.Int32?>(p => p.EndDate, "End Date", (System.Int32?)null);

        public System.Int32? EndDate
        {
            get { return GetProperty(_endDateProperty); }
        }

        public static readonly PropertyInfo<System.String> _nodeProductProperty = RegisterProperty<System.String>(p => p.NodeProduct, "Node Product", (System.String)null);

        public System.String NodeProduct
        {
            get { return GetProperty(_nodeProductProperty); }
        }

        public static readonly PropertyInfo<System.String> _productProperty = RegisterProperty<System.String>(p => p.Product, "Product", (System.String)null);

        public System.String Product
        {
            get { return GetProperty(_productProperty); }
        }

        public static readonly PropertyInfo<System.String> _vouchNumProperty = RegisterProperty<System.String>(p => p.VouchNum, "Vouch Num", (System.String)null);

        public System.String VouchNum
        {
            get { return GetProperty(_vouchNumProperty); }
        }

        public static readonly PropertyInfo<System.Int32> _expdayProperty = RegisterProperty<System.Int32>(p => p.Expday, "Expday");

        public System.Int32 Expday
        {
            get { return GetProperty(_expdayProperty); }
        }

        public static readonly PropertyInfo<System.String> _newUserCostProperty = RegisterProperty<System.String>(p => p.NewUserCost, "New User Cost", (System.String)null);

        public System.String NewUserCost
        {
            get { return GetProperty(_newUserCostProperty); }
        }

        public static readonly PropertyInfo<System.String> _newUserProperty = RegisterProperty<System.String>(p => p.NewUser, "New User", (System.String)null);

        public System.String NewUser
        {
            get { return GetProperty(_newUserProperty); }
        }

        public static readonly PropertyInfo<System.String> _oldUserCostProperty = RegisterProperty<System.String>(p => p.OldUserCost, "Old User Cost", (System.String)null);

        public System.String OldUserCost
        {
            get { return GetProperty(_oldUserCostProperty); }
        }

        public static readonly PropertyInfo<System.String> _oldUserProperty = RegisterProperty<System.String>(p => p.OldUser, "Old User", (System.String)null);

        public System.String OldUser
        {
            get { return GetProperty(_oldUserProperty); }
        }

        public static readonly PropertyInfo<System.Int32?> _perVouchNumProperty = RegisterProperty<System.Int32?>(p => p.PerVouchNum, "Per Vouch Num", (System.Int32?)null);

        public System.Int32? PerVouchNum
        {
            get { return GetProperty(_perVouchNumProperty); }
        }

        public static readonly PropertyInfo<System.Int16?> _statusProperty = RegisterProperty<System.Int16?>(p => p.Status, "Status", (System.Int16?)null);

        public System.Int16? Status
        {
            get { return GetProperty(_statusProperty); }
        }

        public static readonly PropertyInfo<System.Int32?> _createdProperty = RegisterProperty<System.Int32?>(p => p.Created, "Created", (System.Int32?)null);

        public System.Int32? Created
        {
            get { return GetProperty(_createdProperty); }
        }

        public static readonly PropertyInfo<System.String> _createdUidProperty = RegisterProperty<System.String>(p => p.CreatedUid, "Created Uid", (System.String)null);

        public System.String CreatedUid
        {
            get { return GetProperty(_createdUidProperty); }
        }

        public static readonly PropertyInfo<System.Int32?> _updatedProperty = RegisterProperty<System.Int32?>(p => p.Updated, "Updated", (System.Int32?)null);

        public System.Int32? Updated
        {
            get { return GetProperty(_updatedProperty); }
        }

        public static readonly PropertyInfo<System.String> _updatedUidProperty = RegisterProperty<System.String>(p => p.UpdatedUid, "Updated Uid", (System.String)null);

        public System.String UpdatedUid
        {
            get { return GetProperty(_updatedUidProperty); }
        }


        #endregion

        #region Synchronous Factory Methods 

        internal static BaseVouchGroupInfo GetBaseVouchGroupInfo(SafeDataReader reader)
        {
            return DataPortal.FetchChild<BaseVouchGroupInfo>(reader);
        }

        /// <summary>
        /// Returns a <see cref="BaseVouchGroupInfo"/> object of the specified criteria. 
        /// </summary>
        /// <param name="identification">No additional detail available.</param>
        /// <returns>A <see cref="BaseVouchGroupInfo"/> object of the specified criteria.</returns>
        public static BaseVouchGroupInfo GetByIdentification(System.String identification)
        {
            var criteria = new BaseVouchGroupCriteria {Identification = identification};
            
            
            return DataPortal.Fetch<BaseVouchGroupInfo>(criteria);
        }

        #endregion

        #region Asynchronous Factory Methods

        public static void GetByIdentificationAsync(System.String identification, EventHandler<DataPortalResult<BaseVouchGroupInfo>> handler)
        {
            var criteria = new BaseVouchGroupCriteria{Identification = identification};
            
            
            var dp = new DataPortal<BaseVouchGroupInfo>();
            dp.FetchCompleted += handler;
            dp.BeginFetch(criteria);
        }

        #endregion

        #region DataPortal partial methods

        /// <summary>
        /// CodeSmith generated stub method that is called when creating the <see cref="BaseVouchGroupInfo"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object creation should proceed.</param>
        partial void OnCreating(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseVouchGroupInfo"/> object has been created. 
        /// </summary>
        partial void OnCreated();

        /// <summary>
        /// CodeSmith generated stub method that is called when fetching the <see cref="BaseVouchGroupInfo"/> object. 
        /// </summary>
        /// <param name="criteria"><see cref="BaseVouchGroupInfoCriteria"/> object containing the criteria of the object to fetch.</param>
        /// <param name="cancel">Value returned from the method indicating whether the object fetching should proceed.</param>
        partial void OnFetching(BaseVouchGroupCriteria criteria, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseVouchGroupInfo"/> object has been fetched. 
        /// </summary>    
        partial void OnFetched();

        /// <summary>
        /// CodeSmith generated stub method that is called when mapping the <see cref="BaseVouchGroupInfo"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object mapping should proceed.</param>
        partial void OnMapping(ref bool cancel);
 
        /// <summary>
        /// CodeSmith generated stub method that is called when mapping the <see cref="BaseVouchGroupInfo"/> object. 
        /// </summary>
        /// <param name="reader["></param>
        /// <param name="cancel">Value returned from the method indicating whether the object mapping should proceed.</param>
        partial void OnMapping(SafeDataReader reader, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseVouchGroupInfo"/> object has been mapped. 
        /// </summary>
        partial void OnMapped();

        /// <summary>
        /// CodeSmith generated stub method that is called when inserting the <see cref="BaseVouchGroupInfo"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object insertion should proceed.</param>
        partial void OnInserting(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseVouchGroupInfo"/> object has been inserted. 
        /// </summary>
        partial void OnInserted();

        /// <summary>
        /// CodeSmith generated stub method that is called when updating the <see cref="BaseVouchGroupInfo"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object creation should proceed.</param>
        partial void OnUpdating(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseVouchGroupInfo"/> object has been updated. 
        /// </summary>
        partial void OnUpdated();

        /// <summary>
        /// CodeSmith generated stub method that is called when self deleting the <see cref="BaseVouchGroupInfo"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object self deletion should proceed.</param>
        partial void OnSelfDeleting(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseVouchGroupInfo"/> object has been deleted. 
        /// </summary>
        partial void OnSelfDeleted();

        /// <summary>
        /// CodeSmith generated stub method that is called when deleting the <see cref="BaseVouchGroupInfo"/> object. 
        /// </summary>
        /// <param name="criteria"><see cref="BaseVouchGroupInfoCriteria"/> object containing the criteria of the object to delete.</param>
        /// <param name="cancel">Value returned from the method indicating whether the object deletion should proceed.</param>
        partial void OnDeleting(BaseVouchGroupCriteria criteria, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseVouchGroupInfo"/> object with the specified criteria has been deleted. 
        /// </summary>
        partial void OnDeleted();
        partial void OnChildLoading(Csla.Core.IPropertyInfo childProperty, ref bool cancel);

        #endregion

        #region Exists Command

        /// <summary>
        /// Determines if a record exists in the base_vouch_group table in the database for the specified criteria. 
        /// </summary>
        /// <param name="criteria">The criteria parameter is an <see cref="BaseVouchGroupInfo"/> object.</param>
        /// <returns>A boolean value of true is returned if a record is found.</returns>
        public static bool Exists(BaseVouchGroupCriteria criteria)
        {
            return vjf.SyncTool.Business.ExistsCommand.Execute(criteria);
        }

        /// <summary>
        /// Determines if a record exists in the base_vouch_group table in the database for the specified criteria. 
        /// </summary>
        public static void ExistsAsync(BaseVouchGroupCriteria criteria, EventHandler<DataPortalResult<ExistsCommand>> handler)
        {
            vjf.SyncTool.Business.ExistsCommand.ExecuteAsync(criteria, handler);
        }

        #endregion

    }
}