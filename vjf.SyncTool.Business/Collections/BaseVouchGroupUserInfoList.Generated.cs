//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated using CodeSmith: v7.0.1, CSLA Templates: v4.0.0.0, CSLA Framework: v4.3.x.
//     Changes to this file will be lost after each regeneration.
//     To extend the functionality of this class, please modify the partial class 'BaseVouchGroupUserInfoList.cs'.
//
//     Template: ReadOnlyList.Generated.cst
//     Template website: http://code.google.com/p/codesmith/
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;

using Csla;
using Csla.Data;

namespace vjf.SyncTool.Business
{
    [Serializable]
    public partial class BaseVouchGroupUserInfoList : ReadOnlyListBase<BaseVouchGroupUserInfoList, BaseVouchGroupUserInfo>
    {
        #region Contructor(s)

        public BaseVouchGroupUserInfoList()
        { /* Require use of factory methods */ }

        #endregion
    
        #region Synchronous Factory Methods

        /// <summary>
        /// Returns a <see cref="BaseVouchGroupUserInfoList"/> object of the specified criteria. 
        /// </summary>
        /// <param name="identification">No additional detail available.</param>
        /// <returns>A <see cref="BaseVouchGroupUserInfoList"/> object of the specified criteria.</returns>

        public static BaseVouchGroupUserInfoList GetByIdentification(System.String identification)
        {
            var criteria = new BaseVouchGroupUserCriteria{Identification = identification};
            
            
            return DataPortal.Fetch<BaseVouchGroupUserInfoList>(criteria);
        }
        

        /// <summary>
        /// Returns a <see cref="BaseVouchGroupUserInfoList"/> object of the specified criteria. 
        /// </summary>
        /// <param name="fid">No additional detail available.</param>
        /// <returns>A <see cref="BaseVouchGroupUserInfoList"/> object of the specified criteria.</returns>

        public static BaseVouchGroupUserInfoList GetByFid(System.String fid)
        {
            var criteria = new BaseVouchGroupUserCriteria{Fid = fid};
            
            
            return DataPortal.Fetch<BaseVouchGroupUserInfoList>(criteria);
        }
        

        /// <summary>
        /// Returns a <see cref="BaseVouchGroupUserInfoList"/> object of the specified criteria. 
        /// </summary>
        /// <param name="orderId">No additional detail available.</param>
        /// <returns>A <see cref="BaseVouchGroupUserInfoList"/> object of the specified criteria.</returns>

        public static BaseVouchGroupUserInfoList GetByOrderId(System.String orderId)
        {
            var criteria = new BaseVouchGroupUserCriteria{OrderId = orderId};
            
            
            return DataPortal.Fetch<BaseVouchGroupUserInfoList>(criteria);
        }
        

        /// <summary>
        /// Returns a <see cref="BaseVouchGroupUserInfoList"/> object of the specified criteria. 
        /// </summary>
        /// <param name="vouchGid">No additional detail available.</param>
        /// <returns>A <see cref="BaseVouchGroupUserInfoList"/> object of the specified criteria.</returns>

        public static BaseVouchGroupUserInfoList GetByVouchGid(System.String vouchGid)
        {
            var criteria = new BaseVouchGroupUserCriteria{VouchGid = vouchGid};
            
            
            return DataPortal.Fetch<BaseVouchGroupUserInfoList>(criteria);
        }
        

        public static BaseVouchGroupUserInfoList GetByCriteria(BaseVouchGroupUserCriteria criteria)
        {
            return DataPortal.Fetch<BaseVouchGroupUserInfoList>(criteria);
        }

        public static BaseVouchGroupUserInfoList GetAll()
        {
            return DataPortal.Fetch<BaseVouchGroupUserInfoList>(new BaseVouchGroupUserCriteria());
        }

        #endregion

        #region Asynchronous Factory Methods

        public static void GetByIdentificationAsync(System.String identification, EventHandler<DataPortalResult<BaseVouchGroupUserInfoList>> handler)
        {
            var criteria = new BaseVouchGroupUserCriteria{Identification = identification};
            
            
            var dp = new DataPortal<BaseVouchGroupUserInfoList>();
            dp.FetchCompleted += handler;
            dp.BeginFetch(criteria);
        }

        public static void GetByFidAsync(System.String fid, EventHandler<DataPortalResult<BaseVouchGroupUserInfoList>> handler)
        {
            var criteria = new BaseVouchGroupUserCriteria{Fid = fid};
            
            
            var dp = new DataPortal<BaseVouchGroupUserInfoList>();
            dp.FetchCompleted += handler;
            dp.BeginFetch(criteria);
        }

        public static void GetByOrderIdAsync(System.String orderId, EventHandler<DataPortalResult<BaseVouchGroupUserInfoList>> handler)
        {
            var criteria = new BaseVouchGroupUserCriteria{OrderId = orderId};
            
            
            var dp = new DataPortal<BaseVouchGroupUserInfoList>();
            dp.FetchCompleted += handler;
            dp.BeginFetch(criteria);
        }

        public static void GetByVouchGidAsync(System.String vouchGid, EventHandler<DataPortalResult<BaseVouchGroupUserInfoList>> handler)
        {
            var criteria = new BaseVouchGroupUserCriteria{VouchGid = vouchGid};
            
            
            var dp = new DataPortal<BaseVouchGroupUserInfoList>();
            dp.FetchCompleted += handler;
            dp.BeginFetch(criteria);
        }

        public static void GetByCriteriaAsync(BaseVouchGroupUserCriteria criteria, EventHandler<DataPortalResult<BaseVouchGroupUserInfoList>> handler)
        {  
            var dp = new DataPortal<BaseVouchGroupUserInfoList>();
            dp.FetchCompleted += handler;
            dp.BeginFetch(criteria);
        }

        public static void GetAllAsync(EventHandler<DataPortalResult<BaseVouchGroupUserInfoList>> handler)
        {
            var dp = new DataPortal<BaseVouchGroupUserInfoList>();
            dp.FetchCompleted += handler;
            dp.BeginFetch(new BaseVouchGroupUserCriteria());
        }

        #endregion

        #region DataPortal partial methods

        /// <summary>
        /// CodeSmith generated stub method that is called when creating the child <see cref="BaseVouchGroupUserInfo"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object creation should proceed.</param>
        partial void OnCreating(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the child <see cref="BaseVouchGroupUserInfo"/> object has been created. 
        /// </summary>
        partial void OnCreated();

        /// <summary>
        /// CodeSmith generated stub method that is called when fetching the child <see cref="BaseVouchGroupUserInfo"/> object. 
        /// </summary>
        /// <param name="criteria"><see cref="BaseVouchGroupUserInfoCriteria"/> object containing the criteria of the object to fetch.</param>
        /// <param name="cancel">Value returned from the method indicating whether the object fetching should proceed.</param>
        partial void OnFetching(BaseVouchGroupUserCriteria criteria, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the child <see cref="BaseVouchGroupUserInfo"/> object has been fetched. 
        /// </summary>
        partial void OnFetched();

        /// <summary>
        /// CodeSmith generated stub method that is called when mapping the child <see cref="BaseVouchGroupUserInfo"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object mapping should proceed.</param>
        partial void OnMapping(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called when mapping the child <see cref="BaseVouchGroupUserInfo"/> object. 
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="cancel">Value returned from the method indicating whether the object mapping should proceed.</param>
        partial void OnMapping(SafeDataReader reader, ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the child <see cref="BaseVouchGroupUserInfo"/> object has been mapped. 
        /// </summary>
        partial void OnMapped();

        /// <summary>
        /// CodeSmith generated stub method that is called when updating the <see cref="BaseVouchGroupUserInfo"/> object. 
        /// </summary>
        /// <param name="cancel">Value returned from the method indicating whether the object creation should proceed.</param>
        partial void OnUpdating(ref bool cancel);

        /// <summary>
        /// CodeSmith generated stub method that is called after the <see cref="BaseVouchGroupUserInfo"/> object has been updated. 
        /// </summary>
        partial void OnUpdated();
        partial void OnAddNewCore(ref BaseVouchGroupUserInfo item, ref bool cancel);

        #endregion

        #region Exists Command

        /// <summary>
        /// Determines if a record exists in the BaseVouchGroupUserInfo in the database for the specified criteria. 
        /// </summary>
        /// <param name="criteria">The criteria parameter is a <see cref="BaseVouchGroupUserInfoList"/> object.</param>
        /// <returns>A boolean value of true is returned if a record is found.</returns>
        public static bool Exists(BaseVouchGroupUserCriteria criteria)
        {
            return vjf.SyncTool.Business.BaseVouchGroupUserInfo.Exists(criteria);
        }
        /// <summary>
        /// Determines if a record exists in the BaseVouchGroupUserInfo in the database for the specified criteria. 
        /// </summary>
        public static void ExistsAsync(BaseVouchGroupUserCriteria criteria, EventHandler<DataPortalResult<ExistsCommand>> handler)
        {
            vjf.SyncTool.Business.BaseVouchGroupUserInfo.ExistsAsync(criteria,handler);
        }

        #endregion
 
        #region Enhancements

        public BaseVouchGroupUserInfo GetBaseVouchGroupUserInfo(System.String identification)
        {
            return this.FirstOrDefault(i => i.Identification == identification);
        }

        public bool Contains(System.String identification)
        {
            return this.Count(i => i.Identification == identification) > 0;
        }

        #endregion
    }
}